load "medit";

border a1(t=0,1){x=t;y=0;label=1;}
border a2(t=0,1){x=1;y=t;label=1;}
border a3(t=0,1){x=1-t;y=1;label=1;}
border a4(t=0,1){x=0;y=1-t;label=1;}
border C0(t=0,2*pi){x=0.25+0.1*cos(t); y=0.5+0.1*sin(t);label=2;}
border C1(t=0,2*pi){x=0.75+0.1*cos(t); y=0.5+0.1*sin(t);label=2;}
int n=10;
mesh Th = buildmesh(a1(n)+a2(n)+a3(n)+a4(n)+C0(-3*n)+C1(-3*n));
plot(Th);

real T=2, dt=0.01;
func u0=sin(pi*x)*sin(pi*y);
func u1=(1+dt)*sin(pi*x)*sin(pi*y);

fespace Vh(Th,P1);
Vh u=u1,v,uold1=u0,uold2;

macro grad(u) [dx(u), dy(u)] //

int i=1;
for(real t=0;t<=T;t+=dt)
{
//	func uexact=exp(t)*sin(pi*x)*sin(pi*y);
	func f=2*(1+pi^2)*exp(t)*sin(pi*x)*sin(pi*y);
	uold2=uold1;
	uold1=u;
	solve Laplace(u,v,solver=LU) =
		int2d(Th)(1.5*u*v/dt)
		+ int2d(Th)(grad(u)'*grad(v))
		+ int2d(Th)(u*v)
		- int2d(Th)(f*v)
		- int2d(Th)(2*uold1*v/dt)
		+ int2d(Th)(0.5*uold2*v/dt)
		+ on(1,u=25)
		+ on(2,u=200);
//	plot(u);
//	real l2error = sqrt(int2d(Th)((uexact-u)^2));
	savesol("Th."+string(i)+ ".sol",Th,u);
	savemesh(Th,"Th."+string(i)+".mesh");
//	cout<<"Sai so vong lap thu "<<i<<" = "<<l2error<<endl;
	i++;
}
plot(u);