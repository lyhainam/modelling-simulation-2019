load "medit";

int n = 50;
mesh Th = square(n,n);
plot(cmm=" adapted mesh ", Th);

fespace Xh(Th,P2);
fespace Mh(Th,P1);

Xh u2,uold2=0,v2;
Xh u1,uold1=0,v1;
Xh psi,phi;
Mh p,q;

int i = 1;
real Re = 1000, nu = 1/Re; 
real epsilon = 10e-6;
real T = 10, dt=0.1, alpha = 1/dt; 

for(real t=0;t<=T;t+=dt){
	solve NavierStokes (u1,u2,p,v1,v2,q,solver=Crout) =
		int2d(Th)( alpha*(u1*v1 + u2*v2) )
		+ int2d(Th)( nu * ( dx(u1)*dx(v1) + dy(u1)*dy(v1)
			+ dx(u2)*dx(v2) + dy(u2)*dy(v2) )
			)
		+ int2d(Th)( - p*q*epsilon
			- p*dx(v1) - p*dy(v2)
			- dx(u1)*q - dy(u2)*q
			)
		+ int2d(Th)( -alpha*uold1*v1
			-alpha*uold2*v2
			)
		/*+ int2d(Th)( -alpha*convect([uold1,uold2],-dt,uold1)*v1
			-alpha*convect([uold1,uold2],-dt,uold2)*v2
			)*/
		+ on(3,u1=1,u2=0)
		+ on(1,2,4,u1=0,u2=0);
	
	uold1 = u1;
	uold2 = u2;
	plot(cmm=" [u1,u2] and p ",p,[u1,u2]);
	savesol("Th."+string(i)+".sol",Th, [u1,u2]);
	savemesh(Th, "Th."+string(i)+".mesh");
	i++;
}

solve streamlines(psi,phi) =
	int2d(Th)( dx(psi)*dx(phi) + dy(psi)*dy(phi))
	+ int2d(Th)( -phi*(dy(u1)-dx(u2)))
	+ on(1,2,3,4,psi=0);

plot(cmm=" psi ", psi);